test('should set target', () {
    app!.framework.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), target: 'some-target'),
        __WidgetClass__(key: GlobalKey('el-2'), target: 'another-target'),
    ],
    parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('target'), equals('some-target'));
    expect(element2.getAttribute('target'), equals('another-target'));
});

test('should update target', () {
    app!.framework.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), target: 'some-target'),
        __WidgetClass__(key: GlobalKey('el-2'), target: 'another-target'),
    ],
    parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), target: 'updated-target'),
        __WidgetClass__(key: GlobalKey('el-2'), target: 'another-target'),
    ],
    updateType: UpdateType.setState,
    parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('target'), equals('updated-target'));
    expect(element2.getAttribute('target'), equals('another-target'));
});

test('should clear target', () {
    app!.framework.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1')),
        __WidgetClass__(key: GlobalKey('el-2'), target: 'another-target'),
    ],
    parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1')),
        __WidgetClass__(key: GlobalKey('el-2')),
    ],
    updateType: UpdateType.setState,
    parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('target'), equals(null));
    expect(element2.getAttribute('target'), equals(null));
});