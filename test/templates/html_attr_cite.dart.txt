test('should set attribute "cite"', () async {
    await app!.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), cite: 'some-cite'),
        __WidgetClass__(key: GlobalKey('el-2'), cite: 'another-cite'),
    ],
    parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');
    var element2 = app!.elementByGlobalKey('el-2');

    expect(element1.getAttribute('cite'), equals('some-cite'));
    expect(element2.getAttribute('cite'), equals('another-cite'));
}__Skip__);

test('should update attribute "cite"', () async {
    await app!.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), cite: 'some-cite'),
        __WidgetClass__(key: GlobalKey('el-2'), cite: 'another-cite'),
    ],
    parentContext: app!.appContext,
    );

    await app!.updateChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), cite: 'updated-cite'),
        __WidgetClass__(key: GlobalKey('el-2'), cite: 'another-cite'),
    ],
    updateType: UpdateType.setState,
    parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');
    var element2 = app!.elementByGlobalKey('el-2');

    expect(element1.getAttribute('cite'), equals('updated-cite'));
    expect(element2.getAttribute('cite'), equals('another-cite'));
}__Skip__);

test('should clear attribute "cite"', () async {
    await app!.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1')),
        __WidgetClass__(key: GlobalKey('el-2'), cite: 'another-cite'),
    ],
    parentContext: app!.appContext,
    );

    await app!.updateChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1')),
        __WidgetClass__(key: GlobalKey('el-2')),
    ],
    updateType: UpdateType.setState,
    parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');
    var element2 = app!.elementByGlobalKey('el-2');

    expect(element1.getAttribute('cite'), equals(null));
    expect(element2.getAttribute('cite'), equals(null));
});

test('should clear attribute "cite" if updated value is null', () async {
   await app!.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), cite: 'some-cite'),
        ],
        parentContext: app!.appContext,
    );

    await app!.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), cite: null),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');

    expect(element1.getAttribute('cite'), equals(null));
});

test('should not set attribute "cite" if provided value is null', () async {
    await app!.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), cite: null),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');

    expect(element1.getAttribute('cite'), equals(null));
});
