test('should set attribute "accept"', () async {
    await app!.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), accept: 'some-accept'),
            __WidgetClass__(key: GlobalKey('el-2'), accept: 'another-accept'),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');
    var element2 = app!.elementByGlobalKey('el-2');

    expect(element1.getAttribute('accept'), equals('some-accept'));
    expect(element2.getAttribute('accept'), equals('another-accept'));
});

test('should update attribute "accept"', () async {
    await app!.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), accept: 'some-accept'),
            __WidgetClass__(key: GlobalKey('el-2'), accept: 'another-accept'),
        ],
        parentContext: app!.appContext,
    );

    await app!.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), accept: 'updated-accept'),
            __WidgetClass__(key: GlobalKey('el-2'), accept: 'another-accept'),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');
    var element2 = app!.elementByGlobalKey('el-2');

    expect(element1.getAttribute('accept'), equals('updated-accept'));
    expect(element2.getAttribute('accept'), equals('another-accept'));
});

test('should clear attribute "accept"', () async {
    await app!.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1')),
            __WidgetClass__(key: GlobalKey('el-2'), accept: 'another-accept'),
        ],
        parentContext: app!.appContext,
    );

    await app!.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1')),
            __WidgetClass__(key: GlobalKey('el-2')),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');
    var element2 = app!.elementByGlobalKey('el-2');

    expect(element1.getAttribute('accept'), equals(null));
    expect(element2.getAttribute('accept'), equals(null));
});

test('should clear attribute "accept" if updated value is null', () async {
   await app!.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), accept: 'some-accept'),
        ],
        parentContext: app!.appContext,
    );

    await app!.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), accept: null),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');

    expect(element1.getAttribute('accept'), equals(null));
});

test('should not set attribute "accept" if provided value is null', () async {
    await app!.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), accept: null),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.elementByGlobalKey('el-1');

    expect(element1.getAttribute('accept'), equals(null));
});
