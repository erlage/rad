test('should set attribute "disabled" only if its true', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), disabled: false),
            __WidgetClass__(key: GlobalKey('el-2'), disabled: null),
            __WidgetClass__(key: GlobalKey('el-3'), disabled: true),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.element('el-1');
    var element2 = app!.element('el-2');
    var element3 = app!.element('el-3');

    expect(element1.getAttribute('disabled'), equals(null));
    expect(element2.getAttribute('disabled'), equals(null));
    expect(element3.getAttribute('disabled'), equals('true'));
});

test('should clear attribute "disabled" if updated value is not true', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), disabled: true),
            __WidgetClass__(key: GlobalKey('el-2'), disabled: true),
            __WidgetClass__(key: GlobalKey('el-3'), disabled: true),
            __WidgetClass__(key: GlobalKey('el-4'), disabled: true),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), disabled: true),
            __WidgetClass__(key: GlobalKey('el-2'), disabled: false),
            __WidgetClass__(key: GlobalKey('el-3'), disabled: null),
            __WidgetClass__(key: GlobalKey('el-4')),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.element('el-1');
    var element2 = app!.element('el-2');
    var element3 = app!.element('el-3');
    var element4 = app!.element('el-4');

    expect(element1.getAttribute('disabled'), equals('true'));
    expect(element2.getAttribute('disabled'), equals(null));
    expect(element3.getAttribute('disabled'), equals(null));
    expect(element4.getAttribute('disabled'), equals(null));
});