test('should set attribute "required" only if its true', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), required: false),
            __WidgetClass__(key: GlobalKey('el-2'), required: null),
            __WidgetClass__(key: GlobalKey('el-3'), required: true),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    var element3 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-3'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('required'), equals(null));
    expect(element2.getAttribute('required'), equals(null));
    expect(element3.getAttribute('required'), equals('true'));
});

test('should clear attribute "required" if updated value is not true', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), required: true),
            __WidgetClass__(key: GlobalKey('el-2'), required: true),
            __WidgetClass__(key: GlobalKey('el-3'), required: true),
            __WidgetClass__(key: GlobalKey('el-4'), required: true),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), required: true),
            __WidgetClass__(key: GlobalKey('el-2'), required: false),
            __WidgetClass__(key: GlobalKey('el-3'), required: null),
            __WidgetClass__(key: GlobalKey('el-4')),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    var element3 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-3'), app!.appContext)
            .value,
        )!
        .element;

    var element4 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-4'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('required'), equals('true'));
    expect(element2.getAttribute('required'), equals(null));
    expect(element3.getAttribute('required'), equals(null));
    expect(element4.getAttribute('required'), equals(null));
});