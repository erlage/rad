test('should set attribute "height"', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), height: 'some-height'),
            __WidgetClass__(key: GlobalKey('el-2'), height: 'another-height'),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('height'), equals('some-height'));
    expect(element2.getAttribute('height'), equals('another-height'));
});

test('should update attribute "height"', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), height: 'some-height'),
            __WidgetClass__(key: GlobalKey('el-2'), height: 'another-height'),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), height: 'updated-height'),
            __WidgetClass__(key: GlobalKey('el-2'), height: 'another-height'),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('height'), equals('updated-height'));
    expect(element2.getAttribute('height'), equals('another-height'));
});

test('should clear attribute "height"', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1')),
            __WidgetClass__(key: GlobalKey('el-2'), height: 'another-height'),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1')),
            __WidgetClass__(key: GlobalKey('el-2')),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('height'), equals(null));
    expect(element2.getAttribute('height'), equals(null));
});

test('should clear attribute "height" if updated value is null', () {
   app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), height: 'some-height'),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), height: null),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('height'), equals(null));
});

test('should not set attribute "height" if provided value is null', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), height: null),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('height'), equals(null));
});
