test('should set attribute "rows"', () {
    app!.framework.buildChildren(
        widgets: [
            TextArea(key: GlobalKey('el-1'), rows: 10),
            TextArea(key: GlobalKey('el-2'), rows: 0),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('rows'), equals('10'));
    expect(element2.getAttribute('rows'), equals('0'));
});

test('should update attribute "rows"', () {
    app!.framework.buildChildren(
        widgets: [
            TextArea(key: GlobalKey('el-1'), rows: 10),
            TextArea(key: GlobalKey('el-2'), rows: 10),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            TextArea(key: GlobalKey('el-1'), rows: 20),
            TextArea(key: GlobalKey('el-2'), rows: 20),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('rows'), equals('20'));
    expect(element2.getAttribute('rows'), equals('20'));
});

test('should clear attribute "rows"', () {
    app!.framework.buildChildren(
        widgets: [
            TextArea(key: GlobalKey('el-1')),
            TextArea(key: GlobalKey('el-2'), rows: 10),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            TextArea(key: GlobalKey('el-1')),
            TextArea(key: GlobalKey('el-2')),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    var element2 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-2'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('rows'), equals(null));
    expect(element2.getAttribute('rows'), equals(null));
});

test('should clear attribute "rows" if updated value is null', () {
    app!.framework.buildChildren(
        widgets: [
            TextArea(key: GlobalKey('el-1'), rows: 10),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            TextArea(key: GlobalKey('el-1'), rows: null),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('rows'), equals(null));
});

test('should not set attribute "rows" if provided value is null', () {
    app!.framework.buildChildren(
        widgets: [
            TextArea(key: GlobalKey('el-1'), rows: null),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.services.walker
        .getWidgetObjectUsingKey(
        app!.services.keyGen
            .getGlobalKeyUsingKey(GlobalKey('el-1'), app!.appContext)
            .value,
        )!
        .element;

    expect(element1.getAttribute('rows'), equals(null));
});