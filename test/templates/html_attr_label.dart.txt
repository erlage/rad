test('should set attribute "label"', () {
    app!.framework.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), label: 'some-label'),
        __WidgetClass__(key: GlobalKey('el-2'), label: 'another-label'),
    ],
    parentContext: app!.appContext,
    );

    var element1 = app!.element('el-1');
    var element2 = app!.element('el-2');

    expect(element1.getAttribute('label'), equals('some-label'));
    expect(element2.getAttribute('label'), equals('another-label'));
});

test('should update attribute "label"', () {
    app!.framework.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), label: 'some-label'),
        __WidgetClass__(key: GlobalKey('el-2'), label: 'another-label'),
    ],
    parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1'), label: 'updated-label'),
        __WidgetClass__(key: GlobalKey('el-2'), label: 'another-label'),
    ],
    updateType: UpdateType.setState,
    parentContext: app!.appContext,
    );

    var element1 = app!.element('el-1');
    var element2 = app!.element('el-2');

    expect(element1.getAttribute('label'), equals('updated-label'));
    expect(element2.getAttribute('label'), equals('another-label'));
});

test('should clear attribute "label"', () {
    app!.framework.buildChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1')),
        __WidgetClass__(key: GlobalKey('el-2'), label: 'another-label'),
    ],
    parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
    widgets: [
        __WidgetClass__(key: GlobalKey('el-1')),
        __WidgetClass__(key: GlobalKey('el-2')),
    ],
    updateType: UpdateType.setState,
    parentContext: app!.appContext,
    );

    var element1 = app!.element('el-1');
    var element2 = app!.element('el-2');

    expect(element1.getAttribute('label'), equals(null));
    expect(element2.getAttribute('label'), equals(null));
});

test('should clear attribute "label" if updated value is null', () {
   app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), label: 'some-label'),
        ],
        parentContext: app!.appContext,
    );

    app!.framework.updateChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), label: null),
        ],
        updateType: UpdateType.setState,
        parentContext: app!.appContext,
    );

    var element1 = app!.element('el-1');

    expect(element1.getAttribute('label'), equals(null));
});

test('should not set attribute "label" if provided value is null', () {
    app!.framework.buildChildren(
        widgets: [
            __WidgetClass__(key: GlobalKey('el-1'), label: null),
        ],
        parentContext: app!.appContext,
    );

    var element1 = app!.element('el-1');

    expect(element1.getAttribute('label'), equals(null));
});
