name: Build, lint and test

on:
  workflow_dispatch:

  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]
  
jobs:
  analyze: 
    runs-on: ubuntu-latest
    name: Analyze
    strategy:
      matrix:
        dart-sdk-version: [2.17.0, 3.0.0]

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.dart-sdk-version }}

      - name: Run analyze
        run: |
          cd packages/rad
          dart pub get

          # exclude templates from formatter/analyzer, the right way
          rm -rfd test/templates

          dart format --output=none --set-exit-if-changed .
          dart analyze --fatal-infos

  tests:
    runs-on: ubuntu-latest
    name: Run tests
    strategy:
      matrix:
        dart-sdk-version: [2.17.0, 3.0.0]

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.dart-sdk-version }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Generate tests
        run: |
          cd packages/rad/test
          python3 scripts/main.py gen

      - name: Run tests
        run: |
          cd packages/rad
          dart pub get
          dart pub run test --coverage="coverage"
          dart pub global activate coverage
          $HOME/.pub-cache/bin/format_coverage --lcov --in=coverage --out=rad.lcov --report-on=lib
          mv rad.lcov ../../rad.dart.${{ matrix.dart-sdk-version }}.lcov

      - name: Publish to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: rad.dart.${{ matrix.dart-sdk-version }}.lcov
          verbose: true
